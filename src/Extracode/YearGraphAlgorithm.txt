const currentDate = new Date()
        let bottomDate = new Date(currentDate.getFullYear()-1, currentDate.getMonth(), currentDate.getDate())
        let topDate = new Date(currentDate.getFullYear()-1, currentDate.getMonth()+1, currentDate.getDate())
        let monthlyVaR = []
        let totalaaVaR = 0
        console.log(bottomDate.getTime())
        console.log(approvalTransactions[approvalTransactions.length-1].timeStamp*1000)
        console.log(approvalTransactions[approvalTransactions.length-2].timeStamp*1000)
        console.log(approvalTransactions[approvalTransactions.length-3].timeStamp*1000)
        for (let i=0; i<approvalTransactions.length; i++){
            if (topDate.getTime()<approvalTransactions[i].timeStamp*1000){
                console.log(totalaaVaR)
                monthlyVaR.push(totalaaVaR)
                bottomDate.setMonth(bottomDate.getMonth()+1)
                topDate.setMonth(topDate.getMonth()+1)
                totalaaVaR = 0
            }
            if (bottomDate.getTime()<approvalTransactions[i].timeStamp*1000 && topDate.getTime()>approvalTransactions[i].timeStamp*1000){
                let aavar = parseFloat(approvalTransactions[i].aaVaR)/10**18
                totalaaVaR = parseFloat(totalaaVaR) + parseFloat(aavar)
            }
        }

        let changingDate = new Date(currentDate.getFullYear()-1, currentDate.getMonth(), currentDate.getDate())
        let lineChartData = []
        for (let i=0; i<monthlyVaR.length; i++){
            const month = changingDate.toLocaleString('default', { month: 'short' })
            lineChartData.push({
                name: month + " " + changingDate.getFullYear(),
                uv: monthlyVaR[i]
            })
            changingDate.setMonth(changingDate.getMonth()+1)
        }